{\rtf1\ansi\ansicpg936\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int firstUniqChar(String s) \{\
        HashMap<Character, Integer> count = new HashMap<Character, Integer>();\
        int n = s.length();\
        // build hash map : character and how often it appears\
        for (int i = 0; i < n; i++) \{\
            char c = s.charAt(i);\
            count.put(c, count.getOrDefault(c, 0) + 1);\
        \}\
        \
        // find the index\
        for (int i = 0; i < n; i++) \{\
            if (count.get(s.charAt(i)) == 1) \
                return i;\
        \}\
        return -1;\
    \}\
\}}